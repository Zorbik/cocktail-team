{"mappings":"kpBAsBA,IAAAA,EACAC,E,iJArBA,IAAIC,EAAU,GAoBdF,EAlBA,SAAkBG,GAGhB,IAFA,IAAIC,EAAOC,OAAOD,KAAKD,GAEdG,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAC/BJ,EAAQE,EAAKE,IAAMH,EAAMC,EAAKE,G,EAelCL,EAXA,SAAiBO,GACf,IAAIC,EAAWP,EAAQM,GAEvB,GAAgB,MAAZC,EACF,MAAM,IAAIC,MAAM,oCAAsCF,GAGxD,OAAOC,C,KCnBTE,EAAA,SAAAC,SAA8CC,KAAKC,MAAM,sLCAzDH,EAAA,S,sBCAA,I,EAAAI,EAAAJ,EAAA,S,aCAAK,EAAiB,IAAAC,IAAoBN,EAAA,SAAAO,QAA6C,SAAQC,OAAAC,KAAAC,KAAEC,W,oHDS5FP,EAAAQ,QAAQC,iBAAiB,SAEzB,SAAqBC,GACnB,IAAKA,EAAEC,OAAOC,UAAUC,SAAS,OAAQ,OAErCH,EAAEC,OAAOG,QAAQ,6BAevB,SAAuBJ,GACjBA,EAAEC,OAAOC,UAAUC,SAAS,0BAC9B,EAAAE,EAAAC,oBAAmBN,EAAEC,SAErB,EAAAI,EAAAE,iBAAgBP,EAAEC,O,CAlBlBO,CAAcR,GAMlBS,eAA8BT,IAC5B,EAAAU,EAAAC,uBACA,MAAMC,QAAmB,EAAAC,EAAAC,mBAAkBd,EAAEC,OAAOc,QAAQhC,IAC5DO,EAAA0B,kBAAkBC,WAAY,EAAAC,EAAAC,2BAA0BP,GAExDtB,EAAA0B,kBAAkBjB,iBAAiB,QAASW,EAAAU,6B,CAT1CC,CAAerB,E,IAoCZS,iBACL,MAAMa,EAjBR,WACE,IAAIC,GAAM,EAAAC,EAAAC,cAAanC,EAAAoC,wBACvB,IAAKH,EAAIzC,OAEP,YADAQ,EAAAQ,QAAQ6B,YAAc,kDAGxB,IAAIL,EAAa,GAEjB,IAAK,IAAIzC,EAAI,EAAGA,EAAI0C,EAAIzC,OAAQD,GAAK,EACnCyC,EAAWM,MAAK,EAAAf,EAAAC,mBAAkBS,EAAI1C,KACtCgD,QAAQC,IAAI,aAAcR,GAG5B,OADAO,QAAQC,IAAI,aAAcR,GACnBA,C,CAIYS,GACbC,QAAsBC,QAAQC,IAAI,IAAIZ,IAC5CO,QAAQC,IAAI,gBAAiBE,GAC7B,MAAMG,GEpDgCC,EFoDCJ,EEnDvCH,QAAQC,IAAIM,GACLA,EACJC,KAAI,EAACC,QAAEA,EAAOC,cAAEA,EAAaC,aAAEA,KACvB,+CAC+BA,iDACDD,6CACND,GAAoB,oIAEUE,2HAEvD,EAAAnC,EAAAoC,oBAAmBD,IAAiB,EAAI,wBAA0B,gBACtDA,kCACX,EAAAhB,EAAAkB,iBAAgBpD,EAAAoC,uBAAwBc,IAAiB,EAAI,SAAW,oDAEvE,EAAAhB,EAAAkB,iBAAgBpD,EAAAoC,uBAAwBc,IAAiB,EAAI,aAAe,uDAEjEG,EAAApD,8GAOpBqD,KAAK,KAxBH,IAAiCR,EFqDtC9C,EAAAQ,QAAQmB,UAAYkB,EACpB7C,EAAAuD,KAAKC,kBAAkBnB,YAAc,sB,CDrDvC","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-1998e18d995443bd.js","src/favoriteIngredients.js","src/js/createFavoritsIngredientPage.js","node_modules/@parcel/runtime-js/lib/runtime-246d7f17877b7a3f.js","src/js/createMarkupIngredients.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"3xjfn\\\":\\\"favoriteIngredientsPage.6cb1a04e.js\\\",\\\"9v6fF\\\":\\\"symbol-defs.fc3e2d0b.svg\\\",\\\"3MELE\\\":\\\"favoriteCocktailsPage.b039633f.js\\\"}\"));","import './js/addFavoriteCocktail';\nimport './js/header/header-mobile';\nimport './js/header/headerSearchByName';\n\nimport { renderFavoriteIngredientMarkup } from './js/createFavoritsIngredientPage';\n\nrenderFavoriteIngredientMarkup();\n","import { elem, gallery, STORAGE_KEY_INGREDIENT, modalIngredientEl } from './refs';\nimport { getIngredientById } from './request-api';\nimport { createMarkupIngredients } from './createMarkupIngredients';\nimport { getLocalData } from './addFavoriteCocktail';\nimport { openIngredientModal } from './modalEngredient';\nimport { onAddIngredient, onRemoveIngredient } from './addFavoriteIngredient';\nimport { openIngredientModal, onButtonCloseModalIngredient } from './modalEngredient';\nimport { createModalMarkupCocktail } from './createModalIngredientsMarkup';\n\ngallery.addEventListener('click', onClickBtns);\n\nfunction onClickBtns(e) {\n  if (!e.target.classList.contains('btn')) return;\n\n  if (e.target.closest('.ingredient-info__btn-add')) {\n    onClickBtnAdd(e);\n  } else {\n    onClickBtnInfo(e);\n  }\n}\n\nasync function onClickBtnInfo(e) {\n  openIngredientModal();\n  const ingredient = await getIngredientById(e.target.dataset.id);\n  modalIngredientEl.innerHTML = createModalMarkupCocktail(ingredient);\n\n  modalIngredientEl.addEventListener('click', onButtonCloseModalIngredient);\n}\n\nfunction onClickBtnAdd(e) {\n  if (e.target.classList.contains('icon-ingredients-fill')) {\n    onRemoveIngredient(e.target);\n  } else {\n    onAddIngredient(e.target);\n  }\n}\n\nfunction generateArrPromiseForFavoriteIngredientMarkup() {\n  let arr = getLocalData(STORAGE_KEY_INGREDIENT);\n  if (!arr.length) {\n    gallery.textContent = `You haven't added any favorite ingridients yet`;\n    return;\n  }\n  let arrPromise = [];\n\n  for (let i = 0; i < arr.length; i += 1) {\n    arrPromise.push(getIngredientById(arr[i]));\n    console.log('arrPromise', arrPromise);\n  }\n  console.log('arrPromise', arrPromise);\n  return arrPromise;\n}\n\nexport async function renderFavoriteIngredientMarkup() {\n  const arrPromise = generateArrPromiseForFavoriteIngredientMarkup();\n  const arrIngredient = await Promise.all([...arrPromise]);\n  console.log('arrIngredient', arrIngredient);\n  const markup = createMarkupIngredients(arrIngredient);\n  gallery.innerHTML = markup;\n  elem.firstElementChild.textContent = 'Favorite Ingredients';\n}\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"9v6fF\")).toString();","import sprite from '../images/symbol-defs.svg';\nimport { checkIdCocktail } from './addFavoriteCocktail';\nimport { STORAGE_KEY_INGREDIENT } from './refs';\nimport { checkIdIngredients } from './addFavoriteIngredient';\n\nexport function createMarkupIngredients(array) {\n  console.log(array);\n  return array\n    .map(({ strType, strIngredient, idIngredient }) => {\n      return `\n       <li class=\"gallery__item\" data-id=\"${idIngredient}\">\n          <p class=\"gallery__ingredient\">${strIngredient}</p>\n          <p class=\"gallery__desc\">${strType ? strType : ''}</p>\n          <div class=\"ingredient-info gallery__thumb\">\n          <button class=\"ingredient-info__btn-info btn\" data-id=\"${idIngredient}\" type=\"button\" data-modal-target=\"#modal\">Learn more</button>\n          <button class=\"ingredient-info__btn-add btn ${\n            checkIdIngredients(idIngredient) >= 0 ? 'icon-ingredients-fill' : ''\n          }\" data-id=\"${idIngredient}\" type=\"button\">\n           ${checkIdCocktail(STORAGE_KEY_INGREDIENT, idIngredient) >= 0 ? 'Remove' : 'Add to'}\n            <svg class=\"add-btn__icon ${\n              checkIdCocktail(STORAGE_KEY_INGREDIENT, idIngredient) >= 0 ? 'icon__fill' : ''\n            }\" width=\"18\" height=\"18\">\n            <use href=\"${sprite}#icon-empty-heart\"></use>\n            </svg>\n         </button>\n          </div>\n       </li>\n    `;\n    })\n    .join('');\n}\n"],"names":["$ef7689007096c8a0$export$6503ec6e8aabbaf","$ef7689007096c8a0$export$f7ad0328861e2f03","$ef7689007096c8a0$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$krGWQ","$10db6f286535da77$exports","URL","resolve","import","meta","url","toString","gallery","addEventListener","e","target","classList","contains","closest","$7Mknv","onRemoveIngredient","onAddIngredient","$f8f2ecf1df960ac5$var$onClickBtnAdd","async","$lEkxL","openIngredientModal","ingredient","$2I93e","getIngredientById","dataset","modalIngredientEl","innerHTML","$azLGM","createModalMarkupCocktail","onButtonCloseModalIngredient","$f8f2ecf1df960ac5$var$onClickBtnInfo","arrPromise","arr","$8Z9kZ","getLocalData","STORAGE_KEY_INGREDIENT","textContent","push","console","log","$f8f2ecf1df960ac5$var$generateArrPromiseForFavoriteIngredientMarkup","arrIngredient","Promise","all","markup","array","map","strType","strIngredient","idIngredient","checkIdIngredients","checkIdCocktail","$parcel$interopDefault","join","elem","firstElementChild"],"version":3,"file":"favoriteIngredientsPage.6cb1a04e.js.map"}